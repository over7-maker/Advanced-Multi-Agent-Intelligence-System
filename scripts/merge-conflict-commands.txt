# Merge Conflict Resolution Commands for PR #157
# Run these commands in sequence

# 1. First, ensure you're on the PR branch
git checkout feature/test-suite-fixes

# 2. Check current status
git status

# 3. Create backups of all conflicted files
mkdir -p conflict-backups
for f in $(git diff --name-only --diff-filter=U); do
    cp "$f" "conflict-backups/$(basename $f).backup"
done

# 4. Start with the simplest files first (imports)
# Edit __init__.py files to merge imports
vim src/amas/__init__.py
# After editing, stage it:
git add src/amas/__init__.py

vim src/amas/agents/__init__.py
git add src/amas/agents/__init__.py

# 5. Handle configuration file
vim src/amas/config/settings.py
git add src/amas/config/settings.py

# 6. Resolve service-related files
vim src/amas/services/service_manager.py
git add src/amas/services/service_manager.py

# 7. Handle core functionality (careful with these!)
vim src/amas/core/orchestrator.py
git add src/amas/core/orchestrator.py

vim src/amas/core/integration_manager.py
git add src/amas/core/integration_manager.py

# 8. Resolve agent communication
vim src/amas/agents/base/agent_communication.py
git add src/amas/agents/base/agent_communication.py

# 9. Handle main.py
vim src/amas/main.py
git add src/amas/main.py

# 10. Handle test files (MOST IMPORTANT - keep PR changes!)
vim tests/test_agents.py
git add tests/test_agents.py

vim tests/test_integration.py
git add tests/test_integration.py

# 11. Finally, handle README
vim README.md
git add README.md

# 12. Verify all conflicts are resolved
git status

# 13. Check for any remaining conflict markers
grep -rn "<<<<<<< HEAD" --include="*.py" --include="*.md" .
grep -rn "=======" --include="*.py" --include="*.md" .
grep -rn ">>>>>>>" --include="*.py" --include="*.md" .

# 14. Run basic syntax check
python -m py_compile src/amas/**/*.py

# 15. Run a quick test to ensure basics work
python -m pytest tests/test_core.py -v

# 16. If all looks good, commit the merge
git commit

# 17. Push the resolved branch
git push origin feature/test-suite-fixes

# Alternative: If you want to see the conflicts in a GUI
# git mergetool  # if you have one configured
# or use VS Code:
# code .