# AMAS Configuration - Environment Variables Template
# Copy this file to .env and configure your settings

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================

# Environment (development, staging, production)
AMAS_ENVIRONMENT=development

# Application settings
AMAS_APP_NAME=AMAS
AMAS_VERSION=1.0.0
AMAS_DEBUG=false
AMAS_OFFLINE_MODE=true
AMAS_GPU_ENABLED=true

# Logging
AMAS_LOG_LEVEL=INFO
AMAS_LOG_FORMAT="%(asctime)s - %(name)s - %(levelname)s - %(message)s"

# Directories
AMAS_DATA_DIR=data
AMAS_LOGS_DIR=logs
AMAS_MODELS_DIR=models

# =============================================================================
# API CONFIGURATION
# =============================================================================

# API Server
AMAS_API_HOST=0.0.0.0
AMAS_API_PORT=8000
AMAS_API_WORKERS=4
AMAS_API_RELOAD=false

# CORS settings
AMAS_CORS_ORIGINS=["http://localhost:3000", "http://localhost:8080"]

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# PostgreSQL (Primary Database)
AMAS_DB_HOST=localhost
AMAS_DB_PORT=5432
AMAS_DB_USER=amas
AMAS_DB_PASSWORD=amas_secure_password_123
AMAS_DB_NAME=amas

# Redis (Caching & Session Store)
AMAS_REDIS_HOST=localhost
AMAS_REDIS_PORT=6379
AMAS_REDIS_DB=0
AMAS_REDIS_PASSWORD=

# Neo4j (Knowledge Graph)
AMAS_NEO4J_HOST=localhost
AMAS_NEO4J_PORT=7687
AMAS_NEO4J_USER=neo4j
AMAS_NEO4J_PASSWORD=amas_neo4j_password_123
AMAS_NEO4J_DATABASE=neo4j

# =============================================================================
# AI SERVICES CONFIGURATION
# =============================================================================

# Local LLM Service (Ollama)
AMAS_LLM_HOST=localhost
AMAS_LLM_PORT=11434
AMAS_LLM_MODEL=llama3.1:70b
AMAS_LLM_TIMEOUT=300

# Vector Service
AMAS_VECTOR_HOST=localhost
AMAS_VECTOR_PORT=8001

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# JWT Configuration
AMAS_JWT_SECRET=your_super_secure_jwt_secret_key_here_make_it_long_and_random
AMAS_JWT_ALGORITHM=HS256
AMAS_JWT_EXPIRATION=3600

# Encryption
AMAS_ENCRYPTION_KEY=your_32_character_encryption_key_here_exactly_32_chars

# Security Features
AMAS_AUDIT_ENABLED=true
AMAS_RATE_LIMIT_REQUESTS=1000
AMAS_RATE_LIMIT_WINDOW=3600

# =============================================================================
# EXTERNAL API KEYS (Optional - for enhanced capabilities)
# =============================================================================

# AI Service API Keys
DEEPSEEK_API_KEY=your_deepseek_api_key_here
GLM_API_KEY=your_glm_api_key_here
GROK_API_KEY=your_grok_api_key_here
KIMI_API_KEY=your_kimi_api_key_here
QWEN_API_KEY=your_qwen_api_key_here
GPTOSS_API_KEY=your_gptoss_api_key_here

# External Services
N8N_URL=http://localhost:5678
N8N_API_KEY=your_n8n_api_key_here

# =============================================================================
# PERFORMANCE & OPTIMIZATION
# =============================================================================

# GPU Configuration
CUDA_VISIBLE_DEVICES=0
GPU_MEMORY_FRACTION=0.8
MIXED_PRECISION=true

# Processing Configuration
MAX_CONCURRENT_TASKS=10
TASK_TIMEOUT=3600
BATCH_SIZE=32

# Cache Configuration
CACHE_TTL=3600
CACHE_SIZE=1000

# =============================================================================
# MONITORING & OBSERVABILITY
# =============================================================================

# Prometheus Metrics
PROMETHEUS_ENABLED=true
PROMETHEUS_PORT=9090

# Grafana Integration
GRAFANA_URL=http://localhost:3001
GRAFANA_API_KEY=your_grafana_api_key_here

# Health Check Configuration
HEALTH_CHECK_INTERVAL=30
HEALTH_CHECK_TIMEOUT=10

# =============================================================================
# DEVELOPMENT SETTINGS (Development Environment Only)
# =============================================================================

# Development Features
DEV_AUTO_RELOAD=true
DEV_MOCK_EXTERNAL_SERVICES=false
DEV_SEED_DATABASE=true

# Testing Configuration
TEST_DATABASE_URL=postgresql://amas:amas123@localhost:5432/amas_test
TEST_REDIS_URL=redis://localhost:6379/1

# =============================================================================
# DOCKER CONFIGURATION
# =============================================================================

# Docker Compose Variables
COMPOSE_PROJECT_NAME=amas
COMPOSE_FILE=docker-compose.yml

# Container Configuration
POSTGRES_DB=amas
POSTGRES_USER=amas
POSTGRES_PASSWORD=amas_secure_password_123
REDIS_PASSWORD=
NEO4J_AUTH=neo4j/amas_neo4j_password_123

# =============================================================================
# WORKFLOW AUTOMATION
# =============================================================================

# Celery (Task Queue)
CELERY_BROKER_URL=redis://localhost:6379/2
CELERY_RESULT_BACKEND=redis://localhost:6379/3

# Workflow Configuration
MAX_WORKFLOW_STEPS=50
WORKFLOW_TIMEOUT=7200

# =============================================================================
# NETWORK & INFRASTRUCTURE
# =============================================================================

# Load Balancer
NGINX_PORT=80
NGINX_SSL_PORT=443

# SSL Configuration
SSL_CERT_PATH=/etc/ssl/certs/amas.crt
SSL_KEY_PATH=/etc/ssl/private/amas.key

# =============================================================================
# BACKUP & RECOVERY
# =============================================================================

# Backup Configuration
BACKUP_ENABLED=true
BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM
BACKUP_RETENTION_DAYS=30
BACKUP_STORAGE_PATH=/var/backups/amas

# Recovery Configuration
AUTO_RECOVERY_ENABLED=true
RECOVERY_TIMEOUT=600