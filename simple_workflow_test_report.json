{
  "timestamp": "2025-09-26T14:16:43.653035",
  "workflow_tests": {
    "workflow_tests": {
      ".github/workflows/ai_development.yml": {
        "exists": true,
        "yaml_valid": true,
        "component_tests": {
          "ai_code_analysis": true,
          "ai_code_improvement": true,
          "ai_test_generation": true,
          "ai_documentation": true,
          "ai_security_audit": true,
          "ai_performance_optimization": true,
          "continuous_ai_development": true
        },
        "env_tests": {
          "DEEPSEEK_API_KEY": true,
          "GLM_API_KEY": true,
          "GROK_API_KEY": true,
          "KIMI_API_KEY": true,
          "QWEN_API_KEY": true,
          "GPTOSS_API_KEY": true
        },
        "workflow_size": 16367,
        "total_jobs": 7,
        "working_components": 7
      },
      ".github/workflows/ai_complete_workflow.yml": {
        "exists": true,
        "yaml_valid": false,
        "error": "YAML parsing error: while parsing a block mapping\n  in \"<unicode string>\", line 373, column 7:\n        - name: AI Security Audit\n          ^\nexpected <block end>, but found '<scalar>'\n  in \"<unicode string>\", line 383, column 110:\n     ... ut security_report.md\\ || echo \"Script completed with warnings\"\n                                         ^"
      },
      ".github/workflows/ai_simple_workflow.yml": {
        "exists": true,
        "yaml_valid": false,
        "error": "YAML parsing error: while parsing a block mapping\n  in \"<unicode string>\", line 79, column 7:\n        - name: AI Documentation Generation\n          ^\nexpected <block end>, but found '<scalar>'\n  in \"<unicode string>\", line 87, column 128:\n     ... entation_generator.py\\ || echo \"Script completed with warnings\"\n                                         ^"
      }
    },
    "timestamp": "2025-09-26T14:16:43.649780"
  },
  "script_tests": {
    "script_tests": {
      "ai_code_analyzer.py": {
        "exists": true,
        "readable": true,
        "has_main": true,
        "has_argparse": true,
        "size": 15138,
        "line_count": 456
      },
      "ai_code_improver.py": {
        "exists": true,
        "readable": true,
        "has_main": true,
        "has_argparse": true,
        "size": 13096,
        "line_count": 350
      },
      "ai_test_generator.py": {
        "exists": true,
        "readable": true,
        "has_main": true,
        "has_argparse": true,
        "size": 13052,
        "line_count": 348
      },
      "ai_documentation_generator.py": {
        "exists": true,
        "readable": true,
        "has_main": true,
        "has_argparse": true,
        "size": 15922,
        "line_count": 424
      },
      "ai_security_auditor.py": {
        "exists": true,
        "readable": true,
        "has_main": true,
        "has_argparse": true,
        "size": 18209,
        "line_count": 490
      },
      "ai_performance_analyzer.py": {
        "exists": true,
        "readable": true,
        "has_main": true,
        "has_argparse": true,
        "size": 19014,
        "line_count": 501
      },
      "ai_continuous_developer.py": {
        "exists": true,
        "readable": true,
        "has_main": true,
        "has_argparse": true,
        "size": 17227,
        "line_count": 473
      },
      "ai_issues_responder.py": {
        "exists": true,
        "readable": true,
        "has_main": true,
        "has_argparse": true,
        "size": 15573,
        "line_count": 423
      },
      "setup_ai_integration.py": {
        "exists": true,
        "readable": true,
        "has_main": true,
        "has_argparse": true,
        "size": 18996,
        "line_count": 481
      },
      "complete_ai_integration.py": {
        "exists": true,
        "readable": true,
        "has_main": true,
        "has_argparse": true,
        "size": 24147,
        "line_count": 589
      },
      "test_ai_integration_complete.py": {
        "exists": true,
        "readable": true,
        "has_main": true,
        "has_argparse": true,
        "size": 29854,
        "line_count": 741
      },
      "validate_complete_workflows.py": {
        "exists": true,
        "readable": true,
        "has_main": true,
        "has_argparse": true,
        "size": 29405,
        "line_count": 702
      },
      "complete_workflow_setup.py": {
        "exists": true,
        "readable": true,
        "has_main": true,
        "has_argparse": true,
        "size": 25019,
        "line_count": 632
      },
      "final_validation.py": {
        "exists": true,
        "readable": true,
        "has_main": true,
        "has_argparse": true,
        "size": 30495,
        "line_count": 748
      },
      "test_workflows.py": {
        "exists": true,
        "readable": true,
        "has_main": true,
        "has_argparse": true,
        "size": 23314,
        "line_count": 556
      },
      "simple_workflow_test.py": {
        "exists": true,
        "readable": true,
        "has_main": true,
        "has_argparse": true,
        "size": 18658,
        "line_count": 446
      }
    },
    "total_scripts": 16,
    "existing_scripts": 16,
    "working_scripts": 16,
    "timestamp": "2025-09-26T14:16:43.652781"
  },
  "environment_tests": {
    "env_validations": {
      "DEEPSEEK_API_KEY": {
        "set": false,
        "length": 0,
        "starts_with_sk": false,
        "valid_format": false
      },
      "GLM_API_KEY": {
        "set": false,
        "length": 0,
        "starts_with_sk": false,
        "valid_format": false
      },
      "GROK_API_KEY": {
        "set": false,
        "length": 0,
        "starts_with_sk": false,
        "valid_format": false
      },
      "KIMI_API_KEY": {
        "set": false,
        "length": 0,
        "starts_with_sk": false,
        "valid_format": false
      },
      "QWEN_API_KEY": {
        "set": false,
        "length": 0,
        "starts_with_sk": false,
        "valid_format": false
      },
      "GPTOSS_API_KEY": {
        "set": false,
        "length": 0,
        "starts_with_sk": false,
        "valid_format": false
      }
    },
    "python_compatible": true,
    "python_version": "3.13.3",
    "file_validations": {
      "services/ai_service_manager.py": true,
      "config/ai_config.py": true,
      "AI_INTEGRATION_README.md": true,
      "setup_ai_complete.sh": true
    },
    "timestamp": "2025-09-26T14:16:43.653029"
  },
  "summary": {
    "total_workflows": 3,
    "successful_workflows": 1,
    "total_scripts": 16,
    "working_scripts": 16,
    "total_env_vars": 6,
    "set_env_vars": 0,
    "total_files": 4,
    "existing_files": 4,
    "python_compatible": true,
    "overall_status": "complete",
    "recommendations": [
      "Only 1 workflows are working. Complete all workflow configurations.",
      "Only 0 environment variables are set. Set all required API keys.",
      "Workflow testing is mostly complete! Address remaining issues.",
      "All components are working together successfully."
    ]
  }
}