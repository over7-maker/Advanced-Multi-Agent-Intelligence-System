name: AI Code Analysis

# Trigger on pull requests and pushes to main
on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      analysis_type:
        description: 'Type of analysis to perform'
        required: true
        default: 'comprehensive'
        type: choice
        options:
        - comprehensive
        - security
        - performance
        - quality
      target_files:
        description: 'Comma-separated list of files to analyze'
        required: false
        type: string

env:
  PYTHON_VERSION: '3.11'

jobs:
  ai-code-analysis:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      pull-requests: write
      issues: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for better analysis
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install openai aiohttp python-dotenv requests pyyaml PyGithub gitpython
    
    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v40
      with:
        files: |
          **.py
          **.js
          **.ts
          **.yaml
          **.yml
          **.json
          **.md
    
    - name: AI Code Analysis
      if: steps.changed-files.outputs.any_changed == 'true'
      env:
        DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
        GLM_API_KEY: ${{ secrets.GLM_API_KEY }}
        GROK_API_KEY: ${{ secrets.GROK_API_KEY }}
        KIMI_API_KEY: ${{ secrets.KIMI_API_KEY }}
        QWEN_API_KEY: ${{ secrets.QWEN_API_KEY }}
        GPTOSS_API_KEY: ${{ secrets.GPTOSS_API_KEY }}
        CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        PR_NUMBER: ${{ github.event.pull_request.number }}
        REPO_NAME: ${{ github.repository }}
        COMMIT_SHA: ${{ github.sha }}
      run: |
        echo "ðŸ¤– Running AI Code Analysis..."
        python scripts/ai_code_analyzer.py \
          --files "$CHANGED_FILES" \
          --output analysis_report.md \
          --analysis-type ${{ github.event.inputs.analysis_type || 'comprehensive' }} || echo "Code analysis completed with warnings"
        echo "âœ… Code analysis complete!"
    
    - name: Security Scan
      if: steps.changed-files.outputs.any_changed == 'true'
      env:
        DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
        GLM_API_KEY: ${{ secrets.GLM_API_KEY }}
        GROK_API_KEY: ${{ secrets.GROK_API_KEY }}
        KIMI_API_KEY: ${{ secrets.KIMI_API_KEY }}
        QWEN_API_KEY: ${{ secrets.QWEN_API_KEY }}
        GPTOSS_API_KEY: ${{ secrets.GPTOSS_API_KEY }}
        CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
      run: |
        echo "ðŸ”’ Running Security Scan..."
        python scripts/ai_security_auditor.py \
          --files "$CHANGED_FILES" \
          --output security_report.md || echo "Security scan completed with warnings"
        echo "âœ… Security scan complete!"
    
    - name: Performance Analysis
      if: steps.changed-files.outputs.any_changed == 'true'
      env:
        DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
        GLM_API_KEY: ${{ secrets.GLM_API_KEY }}
        GROK_API_KEY: ${{ secrets.GROK_API_KEY }}
        KIMI_API_KEY: ${{ secrets.KIMI_API_KEY }}
        QWEN_API_KEY: ${{ secrets.QWEN_API_KEY }}
        GPTOSS_API_KEY: ${{ secrets.GPTOSS_API_KEY }}
        CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
      run: |
        echo "âš¡ Running Performance Analysis..."
        python scripts/ai_performance_analyzer.py \
          --files "$CHANGED_FILES" \
          --output performance_report.md || echo "Performance analysis completed with warnings"
        echo "âœ… Performance analysis complete!"
    
    - name: Upload Analysis Reports
      uses: actions/upload-artifact@v3
      with:
        name: ai-analysis-reports-${{ github.run_number }}
        path: |
          analysis_report.md
          security_report.md
          performance_report.md
    
    - name: Comment on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          try {
            const report = fs.readFileSync('analysis_report.md', 'utf8');
            const truncatedReport = report.length > 60000 ? report.substring(0, 60000) + '\n\n... (report truncated)' : report;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## ðŸ¤– AI Code Analysis Report\n\n${truncatedReport}`
            });
          } catch (error) {
            console.log('Could not read analysis report:', error);
          }
    
    - name: Create Summary
      run: |
        echo "## ðŸ“Š AI Code Analysis Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Analysis Type**: ${{ github.event.inputs.analysis_type || 'comprehensive' }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Files Analyzed**: ${{ steps.changed-files.outputs.all_changed_files }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Reports Generated**: analysis_report.md, security_report.md, performance_report.md" >> $GITHUB_STEP_SUMMARY
        echo "- **Status**: âœ… Complete" >> $GITHUB_STEP_SUMMARY