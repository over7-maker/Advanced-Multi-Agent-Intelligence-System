name: Enhanced AI Integration Workflow

# Trigger on issues and pull requests
on:
  issues:
    types: [opened, edited, labeled]
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:
    inputs:
      issue_number:
        description: 'Issue number to analyze'
        required: false
        type: string

jobs:
  # Job 1: AI Issue Analysis and Response
  ai-issue-analysis:
    runs-on: ubuntu-latest
    if: github.event_name == 'issues' || github.event_name == 'workflow_dispatch'
    
    permissions:
      issues: write
      contents: read
      pull-requests: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        pip install openai requests python-dotenv PyGithub gitpython
    
    - name: AI Issue Analysis and Response
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
        DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
        ISSUE_NUMBER: ${{ github.event.issue.number || github.event.inputs.issue_number }}
        ISSUE_TITLE: ${{ github.event.issue.title }}
        ISSUE_BODY: ${{ github.event.issue.body }}
        ISSUE_AUTHOR: ${{ github.event.issue.user.login }}
        REPO_NAME: ${{ github.repository }}
      run: |
        python .github/scripts/ai_issue_responder.py
    
    - name: Add AI Analysis Labels
      uses: actions/github-script@v7
      with:
        script: |
          const issueNumber = context.issue.number || '${{ github.event.inputs.issue_number }}';
          await github.rest.issues.addLabels({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: issueNumber,
            labels: ['ai-analyzed', 'auto-response']
          });

  # Job 2: AI Code Analysis for Pull Requests
  ai-code-analysis:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    permissions:
      contents: read
      pull-requests: write
      issues: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        pip install openai requests python-dotenv PyGithub gitpython
    
    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v40
      with:
        files: |
          **.py
          **.js
          **.ts
          **.yaml
          **.yml
          **.json
          **.md
    
    - name: AI Code Analysis
      if: steps.changed-files.outputs.any_changed == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
        DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
        CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        PR_NUMBER: ${{ github.event.pull_request.number }}
        REPO_NAME: ${{ github.repository }}
        COMMIT_SHA: ${{ github.sha }}
      run: |
        python .github/scripts/ai_code_analyzer.py
    
    - name: Security Scan
      if: steps.changed-files.outputs.any_changed == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
        DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
        CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        PR_NUMBER: ${{ github.event.pull_request.number }}
        REPO_NAME: ${{ github.repository }}
      run: |
        python .github/scripts/ai_security_scanner.py

  # Job 3: Multi-Agent Intelligence Analysis
  multi-agent-analysis:
    runs-on: ubuntu-latest
    if: github.event_name == 'issues' || github.event_name == 'workflow_dispatch'
    
    permissions:
      issues: write
      contents: read
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install "openai>=0.27.0"
    
    - name: Run Multi-Agent Intelligence Analysis
      env:
        DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
        GLM_API_KEY: ${{ secrets.GLM_API_KEY }}
        GROK_API_KEY: ${{ secrets.GROK_API_KEY }}
        ISSUE_NUMBER: ${{ github.event.issue.number || github.event.inputs.issue_number }}
        REPO_NAME: ${{ github.repository }}
      run: |
        mkdir -p artifacts
        python .github/scripts/multi_agent_orchestrator.py
    
    - name: Upload Intelligence Report
      uses: actions/upload-artifact@v4
      with:
        name: intelligence-report-${{ github.event.issue.number || github.event.inputs.issue_number }}
        path: artifacts/multi_agent_report.md

  # Job 4: Issue Resolution Integration
  issue-resolution-integration:
    runs-on: ubuntu-latest
    if: github.event_name == 'issues' || github.event_name == 'workflow_dispatch'
    needs: [ai-issue-analysis, multi-agent-analysis]
    
    permissions:
      issues: write
      contents: read
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        pip install openai requests python-dotenv PyGithub
    
    - name: Generate Resolution Summary
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
        DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
        ISSUE_NUMBER: ${{ github.event.issue.number || github.event.inputs.issue_number }}
        REPO_NAME: ${{ github.repository }}
      run: |
        python .github/scripts/issue_resolution_integrator.py
    
    - name: Update Issue with Resolution Status
      uses: actions/github-script@v7
      with:
        script: |
          const issueNumber = context.issue.number || '${{ github.event.inputs.issue_number }}';
          await github.rest.issues.addLabels({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: issueNumber,
            labels: ['ai-resolution-ready']
          });