name: 🧹 Auto Format and Commit (Black/isort)

on:
  workflow_dispatch:
    inputs:
      paths:
        description: 'Paths to format (default: src tests)'
        required: false
        default: 'src tests'
      python-version:
        description: 'Python version for Black/isort'
        required: false
        default: '3.11'
  pull_request:
    types: [labeled]

permissions:
  contents: write
  pull-requests: write

jobs:
  auto-format:
    # Security: Only allow trusted actors and prevent fork abuse
    if: >
      (github.event_name == 'workflow_dispatch') ||
      (github.event_name == 'pull_request' &&
       github.event.label.name == 'auto-format' &&
       github.event.pull_request.head.repo.full_name == github.repository)
    runs-on: ubuntu-latest
    timeout-minutes: 20
    concurrency:
      group: auto-format-${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 1
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🐍 Setup Python
        uses: actions/setup-python@v5.1.0
        with:
          python-version: ${{ github.event.inputs.python-version || '3.11' }}
          cache: 'pip'

      - name: 📦 Install formatters
        run: |
          python -m pip install --upgrade pip
          # Security: isort >=5.13.2 fixes CVE-2023-38995 (command injection)
          pip install black==24.3.0 isort==5.13.2

      - name: 🎨 Run Black
        run: |
          set -e
          TARGETS="${{ github.event.inputs.paths || 'src tests' }}"
          echo "Formatting: $TARGETS"
          if [ -f pyproject.toml ]; then
            black $TARGETS
          else
            black $TARGETS --line-length 88
          fi

      - name: 🔀 Run isort
        run: |
          set -e
          TARGETS="${{ github.event.inputs.paths || 'src tests' }}"
          if [ -f pyproject.toml ]; then
            isort $TARGETS
          else
            isort $TARGETS --profile black
          fi

      - name: 📝 Check for changes
        id: check-changes
        run: |
          if ! git diff --quiet || ! git diff --cached --quiet; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "📝 Changes detected:"
            git status --short
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "✅ No changes detected"
          fi

      - name: 🧾 Commit formatting changes
        if: steps.check-changes.outputs.has_changes == 'true'
        uses: stefanzweifel/git-auto-commit-action@v5.0.0
        with:
          commit_message: "chore: auto-format code with Black and isort [skip ci]"
          commit_user_name: github-actions[bot]
          commit_user_email: github-actions[bot]@users.noreply.github.com
          skip_fetch: true
          file_pattern: |
            **/*.py
            pyproject.toml
            setup.cfg

      - name: ✅ Summary
        if: always()
        run: |
          if [ "${{ steps.check-changes.outputs.has_changes }}" == "true" ]; then
            echo "✅ Code formatted and committed successfully!"
            echo "🔄 Please re-run the 'Code Quality & Standards' CI job to verify."
          else
            echo "ℹ️  No formatting changes were needed. Code is already formatted."
          fi
