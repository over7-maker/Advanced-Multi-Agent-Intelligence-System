name: AI Security Scanner Response

# Automated response to security scan reports
on:
  issues:
    types: [opened, labeled]
    labels: ['security-scan', 'security-report']
  workflow_dispatch:  # Manual trigger
  schedule:
    - cron: '0 */2 * * *'  # Every 2 hours to check for security reports

jobs:
  security-response:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      issues: write
      pull-requests: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install openai requests python-dotenv
    
    - name: AI Security Response Analysis
      env:
        DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
        GLM_API_KEY: ${{ secrets.GLM_API_KEY }}
        GROK_API_KEY: ${{ secrets.GROK_API_KEY }}
        KIMI_API_KEY: ${{ secrets.KIMI_API_KEY }}
        QWEN_API_KEY: ${{ secrets.QWEN_API_KEY }}
        GPTOSS_API_KEY: ${{ secrets.GPTOSS_API_KEY }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        REPO_NAME: ${{ github.repository }}
        PR_NUMBER: ${{ github.event.pull_request.number }}
      run: |
        python .github/scripts/ai_security_response.py
    
    - name: Upload Security Response Report
      uses: actions/upload-artifact@v4
      with:
        name: security-response-report
        path: artifacts/security_response.md
        retention-days: 30
    
    - name: Post Security Response Comment
      if: github.event_name == 'issues'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = 'artifacts/security_response.md';
          
          if (fs.existsSync(path)) {
            const response = fs.readFileSync(path, 'utf8');
            
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: response
            });
            
            // Add appropriate labels
            github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: ['ai-analyzed', 'security-response', 'automated']
            });
          }
    
    - name: Post Security Response to PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = 'artifacts/security_response.md';
          
          if (fs.existsSync(path)) {
            const response = fs.readFileSync(path, 'utf8');
            
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: response
            });
          }