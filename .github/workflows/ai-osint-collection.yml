name: AI OSINT Data Collection and Summarization

# Automated OSINT collection using multiple AI models
on:
  schedule:
    - cron: '0 6 * * *'  # Daily at 6 AM UTC
  workflow_dispatch:  # Manual trigger
  issues:
    types: [opened, labeled]
    labels: ['osint-request', 'intelligence']

jobs:
  osint-collection:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      issues: write
      pull-requests: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install openai requests beautifulsoup4 feedparser
    
    - name: OSINT Data Collection
      env:
        DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
        GLM_API_KEY: ${{ secrets.GLM_API_KEY }}
        GROK_API_KEY: ${{ secrets.GROK_API_KEY }}
        KIMI_API_KEY: ${{ secrets.KIMI_API_KEY }}
        QWEN_API_KEY: ${{ secrets.QWEN_API_KEY }}
        GPTOSS_API_KEY: ${{ secrets.GPTOSS_API_KEY }}
        REPO_NAME: ${{ github.repository }}
        ISSUE_NUMBER: ${{ github.event.issue.number }}
      run: |
        python .github/scripts/ai_osint_collector.py
    
    - name: Upload OSINT Report
      uses: actions/upload-artifact@v4
      with:
        name: osint-intelligence-report
        path: artifacts/osint_report.md
        retention-days: 30
    
    - name: Create Intelligence Summary Issue
      if: github.event_name == 'schedule'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = 'artifacts/osint_report.md';
          
          if (fs.existsSync(path)) {
            const report = fs.readFileSync(path, 'utf8');
            const summary = report.split('## üìä Executive Summary')[1]?.split('---')[0] || 'OSINT collection completed.';
            
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `üîç Daily OSINT Intelligence Report - ${new Date().toISOString().split('T')[0]}`,
              body: `## Daily OSINT Intelligence Summary\n\n${summary}\n\n---\n\n*Full report available in workflow artifacts.*`,
              labels: ['osint-report', 'automated', 'daily', 'intelligence']
            });
          }