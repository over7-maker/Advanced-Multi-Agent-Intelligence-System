name: Multi-Agent Collaborative Intelligence Workflow

on:
  workflow_dispatch:  # manual trigger
  schedule:
    - cron: '0 2 * * *'  # daily at 2 AM UTC
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PYTHON_VERSION: '3.11'

jobs:
  multi-agent-collaboration:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      issues: write
      pull-requests: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install openai aiohttp python-dotenv requests pyyaml PyGithub
    
    - name: Multi-Agent Code Analysis
      env:
        DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
        GLM_API_KEY: ${{ secrets.GLM_API_KEY }}
        GROK_API_KEY: ${{ secrets.GROK_API_KEY }}
        KIMI_API_KEY: ${{ secrets.KIMI_API_KEY }}
        QWEN_API_KEY: ${{ secrets.QWEN_API_KEY }}
        GPTOSS_API_KEY: ${{ secrets.GPTOSS_API_KEY }}
      run: |
        echo "ðŸ¤–ðŸ¤–ðŸ¤– Running Multi-Agent Code Analysis..."
        python scripts/ai_code_analyzer.py \
          --directory . \
          --output multi_agent_analysis.md \
          --extensions .py .js .ts || echo "Multi-agent analysis completed with warnings"
        echo "âœ… Multi-agent analysis complete!"
    
    - name: Multi-Agent Code Improvement
      env:
        DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
        GLM_API_KEY: ${{ secrets.GLM_API_KEY }}
        GROK_API_KEY: ${{ secrets.GROK_API_KEY }}
        KIMI_API_KEY: ${{ secrets.KIMI_API_KEY }}
        QWEN_API_KEY: ${{ secrets.QWEN_API_KEY }}
        GPTOSS_API_KEY: ${{ secrets.GPTOSS_API_KEY }}
      run: |
        echo "ðŸ”§ðŸ”§ðŸ”§ Running Multi-Agent Code Improvement..."
        python scripts/ai_code_improver.py \
          --directory . \
          --output multi_agent_improvements/ \
          --improvement-type performance \
          --extensions .py .js .ts || echo "Multi-agent improvement completed with warnings"
        echo "âœ… Multi-agent improvement complete!"
    
    - name: Multi-Agent Test Generation
      env:
        DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
        GLM_API_KEY: ${{ secrets.GLM_API_KEY }}
        GROK_API_KEY: ${{ secrets.GROK_API_KEY }}
        KIMI_API_KEY: ${{ secrets.KIMI_API_KEY }}
        QWEN_API_KEY: ${{ secrets.QWEN_API_KEY }}
        GPTOSS_API_KEY: ${{ secrets.GPTOSS_API_KEY }}
      run: |
        echo "ðŸ§ªðŸ§ªðŸ§ª Running Multi-Agent Test Generation..."
        python scripts/ai_test_generator.py \
          --directory . \
          --output multi_agent_tests/ \
          --test-type comprehensive \
          --extensions .py .js .ts || echo "Multi-agent test generation completed with warnings"
        echo "âœ… Multi-agent test generation complete!"
    
    - name: Multi-Agent Documentation
      env:
        DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
        GLM_API_KEY: ${{ secrets.GLM_API_KEY }}
        GROK_API_KEY: ${{ secrets.GROK_API_KEY }}
        KIMI_API_KEY: ${{ secrets.KIMI_API_KEY }}
        QWEN_API_KEY: ${{ secrets.QWEN_API_KEY }}
        GPTOSS_API_KEY: ${{ secrets.GPTOSS_API_KEY }}
      run: |
        echo "ðŸ“šðŸ“šðŸ“š Running Multi-Agent Documentation..."
        python scripts/ai_documentation_generator.py \
          --directory . \
          --output multi_agent_docs/ \
          --doc-type comprehensive \
          --extensions .py .js .ts || echo "Multi-agent documentation completed with warnings"
        echo "âœ… Multi-agent documentation complete!"
    
    - name: Multi-Agent Security Audit
      env:
        DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
        GLM_API_KEY: ${{ secrets.GLM_API_KEY }}
        GROK_API_KEY: ${{ secrets.GROK_API_KEY }}
        KIMI_API_KEY: ${{ secrets.KIMI_API_KEY }}
        QWEN_API_KEY: ${{ secrets.QWEN_API_KEY }}
        GPTOSS_API_KEY: ${{ secrets.GPTOSS_API_KEY }}
      run: |
        echo "ðŸ”’ðŸ”’ðŸ”’ Running Multi-Agent Security Audit..."
        python scripts/ai_security_auditor.py \
          --directory . \
          --output multi_agent_security/ \
          --extensions .py .js .ts || echo "Multi-agent security audit completed with warnings"
        echo "âœ… Multi-agent security audit complete!"
    
    - name: Multi-Agent Performance Analysis
      env:
        DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
        GLM_API_KEY: ${{ secrets.GLM_API_KEY }}
        GROK_API_KEY: ${{ secrets.GROK_API_KEY }}
        KIMI_API_KEY: ${{ secrets.KIMI_API_KEY }}
        QWEN_API_KEY: ${{ secrets.QWEN_API_KEY }}
        GPTOSS_API_KEY: ${{ secrets.GPTOSS_API_KEY }}
      run: |
        echo "âš¡âš¡âš¡ Running Multi-Agent Performance Analysis..."
        python scripts/ai_performance_analyzer.py \
          --directory . \
          --output multi_agent_performance/ \
          --extensions .py .js .ts || echo "Multi-agent performance analysis completed with warnings"
        echo "âœ… Multi-agent performance analysis complete!"
    
    - name: Multi-Agent Continuous Development
      env:
        DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
        GLM_API_KEY: ${{ secrets.GLM_API_KEY }}
        GROK_API_KEY: ${{ secrets.GROK_API_KEY }}
        KIMI_API_KEY: ${{ secrets.KIMI_API_KEY }}
        QWEN_API_KEY: ${{ secrets.QWEN_API_KEY }}
        GPTOSS_API_KEY: ${{ secrets.GPTOSS_API_KEY }}
      run: |
        echo "ðŸš€ðŸš€ðŸš€ Running Multi-Agent Continuous Development..."
        python scripts/ai_continuous_developer.py \
          --project-path . \
          --mode full_analysis \
          --output multi_agent_continuous.md || echo "Multi-agent continuous development completed with warnings"
        echo "âœ… Multi-agent continuous development complete!"
    
    - name: Upload Multi-Agent Reports
      uses: actions/upload-artifact@v4
      with:
        name: multi-agent-reports-${{ github.run_number }}
        path: |
          multi_agent_analysis.md
          multi_agent_improvements/
          multi_agent_tests/
          multi_agent_docs/
          multi_agent_security/
          multi_agent_performance/
          multi_agent_continuous.md
    
    - name: Create Pull Request with Multi-Agent Improvements
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'ðŸ¤– Multi-Agent: Collaborative AI improvements'
        title: 'ðŸ¤– Multi-Agent Collaborative Intelligence Improvements'
        body: |
          ## ðŸ¤– Multi-Agent Collaborative Intelligence Report
          
          This PR contains improvements generated by our multi-agent AI system:
          
          - **Code Analysis**: Comprehensive analysis by multiple AI agents
          - **Code Improvements**: Performance and quality enhancements
          - **Test Generation**: Comprehensive test coverage
          - **Documentation**: Enhanced documentation
          - **Security Audit**: Security vulnerability analysis
          - **Performance Analysis**: Performance optimization recommendations
          - **Continuous Development**: Ongoing project improvements
          
          Generated by AMAS Multi-Agent Intelligence System
        branch: multi-agent-improvements-${{ github.run_number }}
        delete-branch: true
    
    - name: Generate Multi-Agent Summary
      run: |
        echo "## ðŸ¤–ðŸ¤–ðŸ¤– Multi-Agent Collaborative Intelligence Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Agents Used**: DeepSeek, GLM, Grok, Kimi, Qwen, GPT-OSS" >> $GITHUB_STEP_SUMMARY
        echo "- **Collaboration Mode**: Full Multi-Agent Analysis" >> $GITHUB_STEP_SUMMARY
        echo "- **Reports Generated**: 7 comprehensive reports" >> $GITHUB_STEP_SUMMARY
        echo "- **Improvements Applied**: Code, Tests, Docs, Security, Performance" >> $GITHUB_STEP_SUMMARY
        echo "- **Status**: âœ… Complete" >> $GITHUB_STEP_SUMMARY