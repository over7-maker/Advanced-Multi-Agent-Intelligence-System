name: AMAS Simple CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  PYTHON_VERSION: '3.11'

jobs:
  # Code Quality
  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black isort flake8 bandit
      
      - name: Run Black formatter
        run: black --check .
        continue-on-error: true
      
      - name: Run isort
        run: isort --check-only .
        continue-on-error: true
      
      - name: Run flake8
        run: flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        continue-on-error: true
      
      - name: Run Bandit security checks
        run: |
          python3 scripts/generate_bandit_report.py
        continue-on-error: true

  # Testing
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest fastapi uvicorn
      
      - name: Run basic tests
        run: |
          python -m pytest tests/unit/test_ci_basic.py -v
        continue-on-error: true
      
      - name: Test main application
        run: |
          python -c "import main_simple; print('Main app import successful')"
        continue-on-error: true

  # Docker Build
  docker-test:
    name: Docker Build Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build Docker image
        run: |
          docker build -t amas:test .
        continue-on-error: true
      
      - name: Test Docker image
        run: |
          docker run --rm amas:test python -c "import main_simple; print('Docker image test passed')"
        continue-on-error: true