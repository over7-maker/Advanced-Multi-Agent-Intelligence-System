name: 🤖 AI-Enhanced Release Creation

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string
      release_type:
        description: 'Type of release'
        required: true
        default: 'minor'
        type: choice
        options:
        - major
        - minor
        - patch
        - prerelease
      changelog:
        description: 'Custom changelog (optional)'
        required: false
        type: string
      auto_bump:
        description: 'Auto-bump version based on type'
        required: false
        default: false
        type: boolean

env:
  PYTHON_VERSION: '3.11'

jobs:
  ai-release-creation:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      issues: write
      pull-requests: write
      packages: write
    
    steps:
    - name: 🔍 Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
    
    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests pyyaml setuptools wheel
        pip install -e .
    
    - name: 🔧 Make scripts executable
      run: |
        chmod +x scripts/generate_changelog.py
        chmod +x scripts/generate_release_notes.py
        chmod +x scripts/update_version.py
    
    - name: 📝 Generate AI-Enhanced Changelog
      id: changelog
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        REPO_NAME: ${{ github.repository }}
        VERSION: ${{ github.event.inputs.version || github.ref_name }}
        RELEASE_TYPE: ${{ github.event.inputs.release_type || 'minor' }}
        CUSTOM_CHANGELOG: ${{ github.event.inputs.changelog }}
      run: |
        echo "🤖 Generating AI-enhanced changelog..."
        python3 scripts/generate_changelog.py \
          --version "$VERSION" \
          --type "$RELEASE_TYPE" \
          --custom "$CUSTOM_CHANGELOG" \
          --output CHANGELOG.md
        echo "✅ Changelog generated successfully"
    
    - name: 📋 Generate AI-Enhanced Release Notes
      id: release-notes
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        REPO_NAME: ${{ github.repository }}
        VERSION: ${{ github.event.inputs.version || github.ref_name }}
      run: |
        echo "🤖 Generating AI-enhanced release notes..."
        python3 scripts/generate_release_notes.py \
          --version "$VERSION" \
          --output RELEASE_NOTES.md
        echo "✅ Release notes generated successfully"
    
    - name: 📊 Update Version Files
      id: update-version
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        REPO_NAME: ${{ github.repository }}
        VERSION: ${{ github.event.inputs.version || github.ref_name }}
        RELEASE_TYPE: ${{ github.event.inputs.release_type || 'minor' }}
        AUTO_BUMP: ${{ github.event.inputs.auto_bump || 'false' }}
      run: |
        echo "🤖 Updating version files with AI assistance..."
        if [ "$AUTO_BUMP" = "true" ]; then
          python3 scripts/update_version.py \
            --version "$VERSION" \
            --type "$RELEASE_TYPE" \
            --auto-bump
        else
          python3 scripts/update_version.py \
            --version "$VERSION" \
            --type "$RELEASE_TYPE"
        fi
        echo "✅ Version files updated successfully"
    
    - name: 🏗️ Build Package
      run: |
        echo "📦 Building package..."
        python -m build
        echo "✅ Package built successfully"
    
    - name: 🚀 Create GitHub Release
      id: create-release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.version || github.ref_name }}
        name: "🤖 AMAS ${{ github.event.inputs.version || github.ref_name }} - AI-Enhanced Release"
        body_path: RELEASE_NOTES.md
        draft: false
        prerelease: ${{ github.event.inputs.release_type == 'prerelease' }}
        files: |
          CHANGELOG.md
          dist/*.whl
          dist/*.tar.gz
          VERSION_INFO.md
        generate_release_notes: true
    
    - name: 📈 Upload Release Assets
      if: steps.create-release.outputs.upload_url
      run: |
        echo "📤 Uploading additional release assets..."
        # Upload any additional assets if needed
        echo "✅ Release assets uploaded"
    
    - name: 🔄 Commit Version Updates
      if: steps.update-version.outcome == 'success'
      run: |
        echo "💾 Committing version updates..."
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Check if there are changes to commit
        if git diff --quiet; then
          echo "ℹ️ No changes to commit"
        else
          git add .
          git commit -m "🤖 AI-Enhanced Release: Update version files for ${{ github.event.inputs.version || github.ref_name }}"
          git push
          echo "✅ Version updates committed"
        fi
    
    - name: 📊 Create AI-Enhanced Release Summary
      run: |
        echo "## 🤖 AI-Enhanced Release ${{ github.event.inputs.version || github.ref_name }} Created" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📋 Release Details" >> $GITHUB_STEP_SUMMARY
        echo "- **Version**: ${{ github.event.inputs.version || github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Type**: ${{ github.event.inputs.release_type || 'minor' }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Auto-bump**: ${{ github.event.inputs.auto_bump || 'false' }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Release Date**: $(date -u +'%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ✅ Completed Tasks" >> $GITHUB_STEP_SUMMARY
        echo "- 🤖 AI-Enhanced Changelog: Generated and uploaded" >> $GITHUB_STEP_SUMMARY
        echo "- 📋 AI-Enhanced Release Notes: Generated and published" >> $GITHUB_STEP_SUMMARY
        echo "- 📊 Version Files: Updated with AI assistance" >> $GITHUB_STEP_SUMMARY
        echo "- 📦 Package: Built and uploaded" >> $GITHUB_STEP_SUMMARY
        echo "- 🚀 GitHub Release: Created successfully" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🔗 Links" >> $GITHUB_STEP_SUMMARY
        echo "- [Release Notes](RELEASE_NOTES.md)" >> $GITHUB_STEP_SUMMARY
        echo "- [Changelog](CHANGELOG.md)" >> $GITHUB_STEP_SUMMARY
        echo "- [Version Info](VERSION_INFO.md)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🤖 AI Analysis" >> $GITHUB_STEP_SUMMARY
        echo "This release was created using AI-enhanced tools that:" >> $GITHUB_STEP_SUMMARY
        echo "- Automatically analyzed commits and pull requests" >> $GITHUB_STEP_SUMMARY
        echo "- Categorized changes intelligently" >> $GITHUB_STEP_SUMMARY
        echo "- Generated comprehensive release notes" >> $GITHUB_STEP_SUMMARY
        echo "- Updated version files consistently" >> $GITHUB_STEP_SUMMARY
        echo "- Provided insights about the release scope" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Status**: ✅ Complete - AI-Enhanced Release System" >> $GITHUB_STEP_SUMMARY
