ðŸ”‘ API KEY MIGRATION TEST RESULTS
==================================================

Direct Usage: 150 instances
Manager Usage: 35 files
Migration Rate: -328.6%

FILES WITH DIRECT USAGE:
------------------------------
â€¢ standalone_universal_ai_manager.py: 26 instances
â€¢ update_workflows_for_advanced_api_manager.py: 15 instances
â€¢ test_workflows.py: 6 instances
â€¢ test_ai_integration_complete.py: 6 instances
â€¢ test_ai_system.py: 8 instances
â€¢ test_ultimate_fallback_system.py: 9 instances
â€¢ test_fallback_system.py: 6 instances
â€¢ enhanced_master_orchestrator.py: 2 instances
â€¢ continuous_improvement_system.py: 8 instances
â€¢ intelligent_ai_router.py: 8 instances
â€¢ enhanced_docker_monitor.py: 2 instances
â€¢ enhanced_conflict_resolver.py: 2 instances
â€¢ enhanced_security_scanner.py: 2 instances
â€¢ ai_code_analyzer.py: 8 instances
â€¢ ai_security_scanner.py: 8 instances
â€¢ enhanced_dependency_auditor.py: 2 instances
â€¢ enhanced_automated_fixer.py: 2 instances
â€¢ ai_issue_responder.py: 8 instances
â€¢ advanced_multi_agent_orchestrator.py: 8 instances
â€¢ main.py: 3 instances
â€¢ openai_clients.py: 3 instances
â€¢ update_9_api_support.py: 8 instances

FILES WITH MANAGER USAGE:
------------------------------
â€¢ standalone_universal_ai_manager.py
â€¢ auto_fix_critical_issues.py
â€¢ fix_final_api_keys.py
â€¢ focused_pre_merge_test.py
â€¢ fix_remaining_api_keys.py
â€¢ fix_last_4_api_keys.py
â€¢ run_all_tests_with_txt_output.py
â€¢ integrate_universal_ai_manager.py
â€¢ ai_incident_response.py
â€¢ ai_threat_intelligence.py
â€¢ ai_security_response.py
â€¢ multi_agent_orchestrator.py
â€¢ ai_osint_collector.py
â€¢ ai_workflow_monitor.py
â€¢ ai_master_orchestrator.py
â€¢ ai_adaptive_prompt_improvement.py
â€¢ unified_ai_router.py
â€¢ ai_api_manager.py
â€¢ api_clients.py
â€¢ intelligent_fallback_system.py
... and 15 more files
