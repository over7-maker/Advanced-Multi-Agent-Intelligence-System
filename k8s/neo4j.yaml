apiVersion: apps/v1
kind: Deployment
metadata:
  name: neo4j
  namespace: amas
  labels:
    app: neo4j
    component: graph-database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: neo4j
  template:
    metadata:
      labels:
        app: neo4j
        component: graph-database
    spec:
      containers:
      - name: neo4j
        image: neo4j:5
        ports:
        - containerPort: 7474
        - containerPort: 7687
        env:
        - name: NEO4J_AUTH
          value: "neo4j/$(NEO4J_PASSWORD)"
        - name: NEO4J_PASSWORD
          valueFrom:
            secretKeyRef:
              name: amas-secrets
              key: NEO4J_PASSWORD
        - name: NEO4J_PLUGINS
          value: '["apoc", "graph-data-science"]'
        - name: NEO4J_dbms_security_procedures_unrestricted
          value: "apoc.*,gds.*"
        - name: NEO4J_dbms_security_procedures_allowlist
          value: "apoc.*,gds.*"
        volumeMounts:
        - name: neo4j-data
          mountPath: /data
        - name: neo4j-logs
          mountPath: /logs
        - name: neo4j-import
          mountPath: /var/lib/neo4j/import
        - name: neo4j-plugins
          mountPath: /plugins
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        livenessProbe:
          exec:
            command:
            - cypher-shell
            - -u
            - neo4j
            - -p
            - "$(NEO4J_PASSWORD)"
            - "RETURN 1"
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 5
        readinessProbe:
          exec:
            command:
            - cypher-shell
            - -u
            - neo4j
            - -p
            - "$(NEO4J_PASSWORD)"
            - "RETURN 1"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 10
          failureThreshold: 3
      volumes:
      - name: neo4j-data
        persistentVolumeClaim:
          claimName: neo4j-data-pvc
      - name: neo4j-logs
        persistentVolumeClaim:
          claimName: neo4j-logs-pvc
      - name: neo4j-import
        persistentVolumeClaim:
          claimName: neo4j-import-pvc
      - name: neo4j-plugins
        persistentVolumeClaim:
          claimName: neo4j-plugins-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: neo4j
  namespace: amas
  labels:
    app: neo4j
    component: graph-database
spec:
  selector:
    app: neo4j
  ports:
  - name: http
    port: 7474
    targetPort: 7474
    protocol: TCP
  - name: bolt
    port: 7687
    targetPort: 7687
    protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: neo4j-data-pvc
  namespace: amas
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: standard
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: neo4j-logs-pvc
  namespace: amas
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: standard
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: neo4j-import-pvc
  namespace: amas
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: neo4j-plugins-pvc
  namespace: amas
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: standard