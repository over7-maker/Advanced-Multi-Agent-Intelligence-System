apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: amas-ingress
  namespace: amas
  labels:
    app: amas
    component: ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - amas.example.com
    secretName: amas-tls
  rules:
  - host: amas.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: amas
            port:
              number: 8000
      - path: /dashboard
        pathType: Prefix
        backend:
          service:
            name: amas
            port:
              number: 3000
      - path: /metrics
        pathType: Prefix
        backend:
          service:
            name: prometheus
            port:
              number: 9090
      - path: /grafana
        pathType: Prefix
        backend:
          service:
            name: grafana
            port:
              number: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: amas-loadbalancer
  namespace: amas
  labels:
    app: amas
    component: loadbalancer
spec:
  type: LoadBalancer
  selector:
    app: amas
  ports:
  - name: http
    port: 80
    targetPort: 8000
    protocol: TCP
  - name: https
    port: 443
    targetPort: 8000
    protocol: TCP
  - name: dashboard
    port: 3000
    targetPort: 3000
    protocol: TCP